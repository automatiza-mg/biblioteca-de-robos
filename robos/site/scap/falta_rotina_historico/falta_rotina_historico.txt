# Para não sobrecarregar o Sisap, sugerimos rodar o robô antes das 09:00 e depois das 16:00
# Primeiro, criar as variáveis de Entrada usuario e senha, citadas na linha 6, com os dados de acesso ao Sisap (masp e senha do Sisap)
DateTime.GetCurrentDateTime.Local DateTimeFormat: DateTime.DateTimeFormat.DateAndTime CurrentDateTime=> data_e_hora_inicio
System.RunApplication.RunApplication ApplicationPath: $'''C:\\Program Files (x86)\\pw3270\\pw3270.exe''' WindowStyle: System.ProcessWindowStyle.Maximized ProcessId=> terminal
WAIT 2
MouseAndKeyboard.SendKeys.FocusAndSendKeysByTitleClass Title: $'''bhmvsb.prodemge.gov.br''' Class: $'''''' TextToSend: $'''sisap{Tab}%usuario%{Tab}%senha%{Return}''' DelayBetweenKeystrokes: 100 SendTextAsHardwareKeys: True
MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Control}({A}){Control}({C})''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
Clipboard.GetText Text=> TELA_SISAP
IF Contains(TELA_SISAP, $'''Senha incorreta. Digite novamente''', True) THEN
    EXIT Code: 0 ErrorMessage: $'''Senha incorreta na Variavel de Entrada \"Senha\". Verificar'''
END
MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''siap{Return}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
/# Deverá ser inserido mais quantidades de TAB no envio de teclas na linha 13 quando o usuário possuir mais de uma opção para seleção na lista de restrição no Sisap:

 VISHC000                                                              PRODEMGE
 NISHC000        SISAP-MG - ADMINISTRACAO DE PESSOAL DO ESTADO       17/12/2024
 M753077                                                               13:15:39
                            Lista de RESTRICOES para selecao
            *** Fim da Lista de RESTRICAO
            _  1981-00000099 SUP.CENTRAL DE GESTAO DE RECURSOS HUMANOS
            X  1501-00000099 SECRETARIA DE PLANEJAMENTO E GESTAO 

Caso o usuario não tenha lista de restrições. desabilitar a linha 13 clicando com o botão direito do mouse em cima da respectiva linha e selecionar "Desablitar Ação"#/
MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Tab}X{Return}{F3}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''HISTORICO SERVIDOR{Return}21{Return}1{Return}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
# Inserir a planilha com o leiaute na linha 17 e 209
Excel.LaunchExcel.LaunchAndOpenUnderExistingProcess Path: `` Visible: True ReadOnly: False Instance=> planilha_faltas_historico
Excel.GetFirstFreeRowOnColumn Instance: planilha_faltas_historico Column: $'''A''' FirstFreeRowOnColumn=> linha_coluna_masp
Excel.GetFirstFreeRowOnColumn Instance: planilha_faltas_historico Column: $'''N''' FirstFreeRowOnColumn=> linha_coluna_status
LOOP WHILE (linha_coluna_status) < (linha_coluna_masp)
    Excel.ReadFromExcel.ReadCell Instance: planilha_faltas_historico StartColumn: $'''B''' StartRow: linha_coluna_status ReadAsText: True CellValue=> Masp1
    Excel.ReadFromExcel.ReadCell Instance: planilha_faltas_historico StartColumn: $'''C''' StartRow: linha_coluna_status ReadAsText: True CellValue=> digito_verificador
    Excel.ReadFromExcel.ReadCell Instance: planilha_faltas_historico StartColumn: $'''D''' StartRow: linha_coluna_status ReadAsText: True CellValue=> ADMISSAO
    Excel.ReadFromExcel.ReadCell Instance: planilha_faltas_historico StartColumn: $'''E''' StartRow: linha_coluna_status ReadAsText: True CellValue=> mes_ano_apuracao
    Excel.ReadFromExcel.ReadCell Instance: planilha_faltas_historico StartColumn: $'''F''' StartRow: linha_coluna_status ReadAsText: True CellValue=> tipo_de_falta
    Excel.ReadFromExcel.ReadCell Instance: planilha_faltas_historico StartColumn: $'''G''' StartRow: linha_coluna_status ReadAsText: True CellValue=> quantidade_de_faltas
    Excel.ReadFromExcel.ReadCell Instance: planilha_faltas_historico StartColumn: $'''H''' StartRow: linha_coluna_status ReadAsText: True CellValue=> horas_a_descontar
    Excel.ReadFromExcel.ReadCell Instance: planilha_faltas_historico StartColumn: $'''J''' StartRow: linha_coluna_status ReadAsText: True CellValue=> codigo_verba_falta
    Excel.ReadFromExcel.ReadCell Instance: planilha_faltas_historico StartColumn: $'''K''' StartRow: linha_coluna_status ReadAsText: True CellValue=> valor_do_desconto
    Excel.ReadFromExcel.ReadCell Instance: planilha_faltas_historico StartColumn: $'''L''' StartRow: linha_coluna_status ReadAsText: True CellValue=> INSERIR_OCORRENCIA
    Excel.ReadFromExcel.ReadCell Instance: planilha_faltas_historico StartColumn: $'''M''' StartRow: linha_coluna_status ReadAsText: True CellValue=> DESCRITOR_OCORRENCIA
    MouseAndKeyboard.SendKeys.FocusAndSendKeysByTitleClass Title: $'''pw3270 - bhmvst.prodemge.gov.br:23''' Class: $'''''' TextToSend: $'''%Masp1%%digito_verificador%%ADMISSAO%{Return}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
    WAIT 2
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Control}({A}){Control}({C})''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
    Clipboard.GetText Text=> TELA_SISAP
    IF Contains(TELA_SISAP, $'''0222 - Servidor inativo na Instituicao''', True) THEN
        Excel.WriteToExcel.WriteCell Instance: planilha_faltas_historico Value: $'''Servidor inativo na Instituicao''' Column: $'''I''' Row: linha_coluna_status
        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{F2}1{Return}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
        GOTO 'Proximo Masp'
    ELSE IF Contains(TELA_SISAP, $'''0154 - Operador nao autorizado para incluir''', True) THEN
        Excel.WriteToExcel.WriteCell Instance: planilha_faltas_historico Value: $'''IOperador nao autorizado para incluir''' Column: $'''I''' Row: linha_coluna_status
        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{F2}1{Return}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
        GOTO 'Proximo Masp'
    ELSE IF Contains(TELA_SISAP, $'''0034 - MASP invalido''', True) THEN
        Excel.WriteToExcel.WriteCell Instance: planilha_faltas_historico Value: $'''MASP invalido''' Column: $'''I''' Row: linha_coluna_status
        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{F2}1{Return}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
        GOTO 'Proximo Masp'
    ELSE IF Contains(TELA_SISAP, $'''0113 - Numero Admissao inexistente/invalido''', True) THEN
        Excel.WriteToExcel.WriteCell Instance: planilha_faltas_historico Value: $'''Numero Admissao inexistente/invalido''' Column: $'''I''' Row: linha_coluna_status
        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{F2}1{Return}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
        GOTO 'Proximo Masp'
    ELSE IF Contains(TELA_SISAP, $'''0041 - Digito Verificador invalido''', True) THEN
        Excel.WriteToExcel.WriteCell Instance: planilha_faltas_historico Value: $'''Digito Verificador invalido''' Column: $'''I''' Row: linha_coluna_status
        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{F2}1{Return}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
        GOTO 'Proximo Masp'
    ELSE IF Contains(TELA_SISAP, $'''NISHC714''', True) THEN
        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''X{Return}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
    END
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: mes_ano_apuracao DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''%tipo_de_falta%{Return}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
    WAIT 2
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Control}({A}){Control}({C})''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
    Clipboard.GetText Text=> TELA_SISAP
    IF Contains(TELA_SISAP, $'''0343 - Utilize ROTINA DE FALTAS''', True) THEN
        Excel.WriteToExcel.WriteCell Instance: planilha_faltas_historico Value: $'''Verifique o Mês/Ano apuração - Utilize ROTINA DE FALTAS''' Column: $'''I''' Row: linha_coluna_status
        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{F2}1{Return}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
        GOTO 'Proximo Masp'
    END
    IF Contains(TELA_SISAP, $'''0298 - Ano/Mes nao pode ser igual ou maior que Data Corrente''', True) THEN
        Excel.WriteToExcel.WriteCell Instance: planilha_faltas_historico Value: $'''Mês/Ano apuração das faltas igual ao mês corrente''' Column: $'''I''' Row: linha_coluna_status
        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{F2}1{Return}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
        GOTO 'Proximo Masp'
    END
    IF Contains(TELA_SISAP, $'''0039 - Opcao invalida''', True) THEN
        Excel.WriteToExcel.WriteCell Instance: planilha_faltas_historico Value: $'''Código de falta invalido''' Column: $'''I''' Row: linha_coluna_status
        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{F2}1{Return}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
        GOTO 'Proximo Masp'
    END
    IF Contains(TELA_SISAP, $'''0222 - Servidor com faltas cadastradas. Acesse alteracao''', True) THEN
        Excel.WriteToExcel.WriteCell Instance: planilha_faltas_historico Value: $'''Servidor com faltas cadastradas. Verificar/Alterar''' Column: $'''I''' Row: linha_coluna_status
        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{F2}1{Return}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
        GOTO 'Proximo Masp'
    END
    IF Contains(TELA_SISAP, $'''*** Comando invalido''', True) THEN
        Excel.WriteToExcel.WriteCell Instance: planilha_faltas_historico Value: $'''Comando Inválido. Verificar inclusão manual''' Column: $'''I''' Row: linha_coluna_status
        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{F2}1{Return}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
        GOTO 'Proximo Masp'
    END
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: quantidade_de_faltas DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''%horas_a_descontar%{Return}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
    WAIT 2
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Control}({A}){Control}({C})''' DelayBetweenKeystrokes: 100 SendTextAsHardwareKeys: True
    Clipboard.GetText Text=> TELA_SISAP
    IF Contains(TELA_SISAP, $'''0063 - Quantidade de faltas e eventos maior que dias do mes.''', True) THEN
        Excel.WriteToExcel.WriteCell Instance: planilha_faltas_historico Value: $'''Quantidade de faltas e eventos maior que dias do mes.''' Column: $'''I''' Row: linha_coluna_status
        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{F2}1{Return}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
        GOTO 'Proximo Masp'
    END
    IF Contains(TELA_SISAP, $'''*** Comando invalido''', True) THEN
        Excel.WriteToExcel.WriteCell Instance: planilha_faltas_historico Value: $'''Comando Inválido. Verificar ''' Column: $'''I''' Row: linha_coluna_status
        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{F2}1{Return}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
        GOTO 'Proximo Masp'
    END
    IF Contains(TELA_SISAP, $'''0008 - Tecle <PF5> para confirmar''', True) THEN
        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{F5}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
        Excel.WriteToExcel.WriteCell Instance: planilha_faltas_historico Value: $'''Registro de falta incluido com sucesso''' Column: $'''I''' Row: linha_coluna_status
    END
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{F3}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''MANUTENCAO DADOS FINANCEIROS{Return}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''01{Return}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''%Masp1%%digito_verificador%%ADMISSAO%{Return}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
    WAIT 3
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Return}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Control}({A}){Control}({C})''' DelayBetweenKeystrokes: 100 SendTextAsHardwareKeys: True
    Clipboard.GetText Text=> TELA_SISAP
    IF Contains(TELA_SISAP, $'''SISHCD7B''', True) THEN
        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{F5}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
    END
    WAIT 3
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Control}({A}){Control}({C})''' DelayBetweenKeystrokes: 250 SendTextAsHardwareKeys: True
    Clipboard.GetText Text=> TELA_SISAP
    IF Contains(TELA_SISAP, $'''SISHCD7B''', True) THEN
        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{F5}''' DelayBetweenKeystrokes: 250 SendTextAsHardwareKeys: True
    END
    WAIT 3
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Control}({A}){Control}({C})''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
    Clipboard.GetText Text=> TELA_SISAP
    WAIT 3
    IF Contains(TELA_SISAP, $'''SISHCD7C''', True) THEN
        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Down}{Down}{Down}{Down}{Down}{Down}{Down}{Down}I%codigo_verba_falta%{Return}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''%valor_do_desconto%{Return}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Control}({A}){Control}({C})''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
        Clipboard.GetText Text=> TELA_SISAP
        IF Contains(TELA_SISAP, $'''0516 - Valor excedido, Coordenador deve incluir''', True) THEN
            Excel.WriteToExcel.WriteCell Instance: planilha_faltas_historico Value: $'''Valor excedido, Coordenador deve incluir''' Column: $'''N''' Row: linha_coluna_status
            MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{F2}{F3}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
            MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''HISTORICO SERVIDOR{Return}21{Return}1{Return}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
            GOTO 'Proximo Masp'
        ELSE
            Clipboard.SetText Text: $'''?'''
            MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Control}({V})''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
            WAIT 2
            MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Return}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
            MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Return}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
            MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: valor_do_desconto DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
            MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Return}{F5}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
        END
        WAIT 3
        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Control}({A}){Control}({C})''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
        Clipboard.GetText Text=> TELA_SISAP
    ELSE IF Contains(TELA_SISAP, $'''0039 - Opcao invalida.''', True) THEN
        Excel.WriteToExcel.WriteCell Instance: planilha_faltas_historico Value: $'''Valor de desconto da falta não incluido. Verificar inclusão manual''' Column: $'''N''' Row: linha_coluna_status
        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{F2}{F3}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''HISTORICO SERVIDOR{Return}21{Return}1{Return}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
        GOTO 'Proximo Masp'
    END
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Control}({A}){Control}({C})''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
    Clipboard.GetText Text=> TELA_SISAP
    WAIT 3
    IF Contains(TELA_SISAP, $'''SISHCD7R''', True) THEN
        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{F5}''' DelayBetweenKeystrokes: 250 SendTextAsHardwareKeys: True
        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''S{Return}''' DelayBetweenKeystrokes: 250 SendTextAsHardwareKeys: True
        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''%INSERIR_OCORRENCIA%{Return}''' DelayBetweenKeystrokes: 250 SendTextAsHardwareKeys: True
    END
    IF Contains(INSERIR_OCORRENCIA, $'''n''', True) THEN
        Excel.WriteToExcel.WriteCell Instance: planilha_faltas_historico Value: $'''Valor de desconto da falta incluido com sucesso''' Column: $'''N''' Row: linha_coluna_status
        Excel.WriteToExcel.WriteCell Instance: planilha_faltas_historico Value: $'''Sem inclusão de ocorrencia relativa ao desconto da falta''' Column: $'''O''' Row: linha_coluna_status
        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{F2}{F3}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''HISTORICO SERVIDOR{Return}21{Return}1{Return}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
        GOTO 'Proximo Masp'
    END
    WAIT 3
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Control}({A}){Control}({C})''' DelayBetweenKeystrokes: 250 SendTextAsHardwareKeys: True
    Clipboard.GetText Text=> TELA_SISAP
    IF Contains(TELA_SISAP, $'''SISHCD7E''', True) THEN
        Clipboard.GetText Text=> manutencao_ocorrencia
        Text.SplitText.Split Text: manutencao_ocorrencia StandardDelimiter: Text.StandardDelimiter.NewLine DelimiterTimes: 1 Result=> TextList
        Text.SplitText.Split Text: TextList[8] StandardDelimiter: Text.StandardDelimiter.NewLine DelimiterTimes: 1 Result=> TextList2
        Text.ParseText.RegexParseForFirstOccurrence Text: TextList2 TextToFind: TextList2 StartingPosition: 0 IgnoreCase: True OccurrencePosition=> Position Match=> Match
        IF Contains(Match, $'''< ______________________________________________________________________ >''', False) THEN
            MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: DESCRITOR_OCORRENCIA DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
            MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{F5}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
            Excel.WriteToExcel.WriteCell Instance: planilha_faltas_historico Value: $'''Efetuada inclusão de ocorrencia relativa ao desconto da falta''' Column: $'''O''' Row: linha_coluna_status
            Excel.WriteToExcel.WriteCell Instance: planilha_faltas_historico Value: $'''Valor de desconto da falta incluido com sucesso''' Column: $'''N''' Row: linha_coluna_status
            MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{F2}{F3}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
            MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''HISTORICO SERVIDOR{Return}21{Return}1{Return}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
            GOTO 'Proximo Masp'
        ELSE
            MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{F2}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
            Excel.WriteToExcel.WriteCell Instance: planilha_faltas_historico Value: $'''Sem inclusão da ocorrencia relativa ao desconto da falta''' Column: $'''O''' Row: linha_coluna_status
            Excel.WriteToExcel.WriteCell Instance: planilha_faltas_historico Value: $'''Valor de desconto da falta incluido com sucesso''' Column: $'''N''' Row: linha_coluna_status
            MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{F2}{F3}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
            MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''HISTORICO SERVIDOR{Return}21{Return}1{Return}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
            GOTO 'Proximo Masp'
        END
    END
    LABEL 'Proximo Masp'
    Variables.IncreaseVariable Value: linha_coluna_status IncrementValue: 1
END
MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{F3}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
Excel.SaveExcel.Save Instance: planilha_faltas_historico
Excel.CloseExcel.Close Instance: planilha_faltas_historico
MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{F12}''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
DateTime.GetCurrentDateTime.Local DateTimeFormat: DateTime.DateTimeFormat.DateAndTime CurrentDateTime=> data_e_hora_final
DateTime.Subtract FromDate: data_e_hora_final SubstractDate: data_e_hora_inicio TimeUnit: DateTime.DifferenceTimeUnit.Minutes TimeDifference=> tempogasto
WAIT 2
Display.ShowMessageDialog.ShowMessage Message: $'''REGISTROS INCLUÍDOS EM %tempogasto% MINUTOS. VERIFICAR COLUNA DE STATUS.




Desenvolvido por: Erik Morais 
Dúvidas e Suporte contato através do e-mail: erik.morais@planejamento.mg.gov.br''' Icon: Display.Icon.None Buttons: Display.Buttons.OK DefaultButton: Display.DefaultButton.Button1 IsTopMost: False ButtonPressed=> ButtonPressed
MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Control}({Q})''' DelayBetweenKeystrokes: 150 SendTextAsHardwareKeys: True
Excel.LaunchExcel.LaunchAndOpenUnderExistingProcess Path: `` Visible: True ReadOnly: False Instance=> ExcelInstance
