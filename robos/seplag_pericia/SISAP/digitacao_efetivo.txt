Excel.GetFirstFreeRowOnColumn Instance: excel_pericia Column: $'''W''' FirstFreeRowOnColumn=> linha_loop
Excel.GetFirstFreeRowOnColumn Instance: excel_pericia Column: $'''A''' FirstFreeRowOnColumn=> linha_livre
LABEL 'próxima linha'
LOOP LoopIndex2 FROM linha_loop TO linha_livre - 1 STEP 1
    # leitura dos campos de cada coluna da planilha gerada após assimilar infos do SEI (BIM servidor - Folha 01 e BIM perito), uma linha de cada vez neste loop
    DISABLE SET masp_interessado TO 11281714
    Excel.ReadFromExcel.ReadCell Instance: excel_pericia StartColumn: $'''E''' StartRow: linha_loop ReadAsText: True CellValue=> masp_interessado
    Excel.ReadFromExcel.ReadCell Instance: excel_pericia StartColumn: $'''I''' StartRow: linha_loop ReadAsText: True CellValue=> CRM_peito
    Excel.ReadFromExcel.ReadCell Instance: excel_pericia StartColumn: $'''J''' StartRow: linha_loop ReadAsText: True CellValue=> CRM_atestado
    Excel.ReadFromExcel.ReadCell Instance: excel_pericia StartColumn: $'''K''' StartRow: linha_loop ReadAsText: True CellValue=> data_inicio_afastamento
    Excel.ReadFromExcel.ReadCell Instance: excel_pericia StartColumn: $'''L''' StartRow: linha_loop ReadAsText: True CellValue=> data_emissao_atestado
    Excel.ReadFromExcel.ReadCell Instance: excel_pericia StartColumn: $'''M''' StartRow: linha_loop ReadAsText: True CellValue=> data_revisao_atestado
    Excel.ReadFromExcel.ReadCell Instance: excel_pericia StartColumn: $'''N''' StartRow: linha_loop ReadAsText: True CellValue=> dias_solicitados
    Excel.ReadFromExcel.ReadCell Instance: excel_pericia StartColumn: $'''O''' StartRow: linha_loop ReadAsText: True CellValue=> dias_concedidos
    Excel.ReadFromExcel.ReadCell Instance: excel_pericia StartColumn: $'''P''' StartRow: linha_loop ReadAsText: True CellValue=> cid_interessado
    Excel.ReadFromExcel.ReadCell Instance: excel_pericia StartColumn: $'''S''' StartRow: linha_loop ReadAsText: True CellValue=> codigo_decisao_LTS
    Excel.ReadFromExcel.ReadCell Instance: excel_pericia StartColumn: $'''T''' StartRow: linha_loop ReadAsText: True CellValue=> vinculo_interessado
    DISABLE SET admissao TO 3
    Excel.ReadFromExcel.ReadCell Instance: excel_pericia StartColumn: $'''V''' StartRow: linha_loop ReadAsText: True CellValue=> admissao_servidor
    IF vinculo_interessado = 60 THEN
        CALL não_efetivo
        MouseAndKeyboard.SendKeys.FocusAndSendKeysByTitleClass Title: terminal Class: $'''''' TextToSend: $'''{F3}''' DelayBetweenKeystrokes: 200 SendTextAsHardwareKeys: True
        GOTO 'próxima linha'
    END
    # envio de F6 para aparecer seletor de unidade
    MouseAndKeyboard.SendKeys.FocusAndSendKeysByTitleClass Title: terminal Class: $'''''' TextToSend: $'''{Delete}{Return}''' DelayBetweenKeystrokes: 200 SendTextAsHardwareKeys: True
    WAIT 2
    MouseAndKeyboard.SendKeys.FocusAndSendKeysByTitleClass Title: terminal Class: $'''''' TextToSend: $'''{F6}''' DelayBetweenKeystrokes: 200 SendTextAsHardwareKeys: True
    # seleção da unidade SEPLAG - código (REPLICAR MESMA ESTRUTURA DE LOOP DO ROMANO PARA SELECINOAR UNIDADE, PODENDO SER INCLUSIVE A NRPMSO)
    MouseAndKeyboard.SendKeys.FocusAndSendKeysByTitleClass Title: terminal Class: $'''''' TextToSend: $'''{Tab}X{Enter}''' DelayBetweenKeystrokes: 100 SendTextAsHardwareKeys: True
    # seleção da INSPEÇÃO MÉDICA NÃO AGENDADA (no meu perfil, é a segunda opção)
    MouseAndKeyboard.SendKeys.FocusAndSendKeysByTitleClass Title: terminal Class: $'''''' TextToSend: $'''{Tab}{Tab}X{Enter}''' DelayBetweenKeystrokes: 100 SendTextAsHardwareKeys: True
    # Incluir Inspecao Medica - Cpf/Masp  (opção 1)
    MouseAndKeyboard.SendKeys.FocusAndSendKeysByTitleClass Title: terminal Class: $'''''' TextToSend: $'''01{Enter}''' DelayBetweenKeystrokes: 200 SendTextAsHardwareKeys: True
    # seleção da opção COM MASP
    MouseAndKeyboard.SendKeys.FocusAndSendKeysByTitleClass Title: terminal Class: $'''''' TextToSend: $'''X{Enter}''' DelayBetweenKeystrokes: 200 SendTextAsHardwareKeys: True
    /# As ações a seguir são para selecionar a admissão da pessoa, a partir de um loop na tela da seleção da admissão
#/
    MouseAndKeyboard.SendKeys.FocusAndSendKeysByTitleClass Title: terminal Class: $'''''' TextToSend: $'''%masp_interessado%{Enter}''' DelayBetweenKeystrokes: 200 SendTextAsHardwareKeys: True
    MouseAndKeyboard.SendKeys.FocusAndSendKeysByTitleClass Title: terminal Class: $'''''' TextToSend: $'''{Control}({A}){Control}({C})''' DelayBetweenKeystrokes: 200 SendTextAsHardwareKeys: True
    Clipboard.GetText Text=> tela_admissao
    IF IsEmpty(tela_admissao[14]) THEN
        IF Contains(tela_admissao[12], $'''DESLIGADO''', False) THEN
            Excel.WriteToExcel.WriteCell Instance: excel_pericia Value: $'''ELABORAR SUBFLUXO AFASTAMENTO PREVIDENCIÁRIO PARA ADMISSÃO ÚNICA DESLIGADO''' Column: $'''W''' Row: linha_loop
            DISABLE CALL afastamento_previdenciario
            MouseAndKeyboard.SendKeys.FocusAndSendKeysByTitleClass Title: terminal Class: $'''''' TextToSend: $'''{F3}''' DelayBetweenKeystrokes: 200 SendTextAsHardwareKeys: True
            GOTO 'próxima linha'
        END
        MouseAndKeyboard.SendKeys.FocusAndSendKeysByTitleClass Title: terminal Class: $'''''' TextToSend: $'''X{Return}''' DelayBetweenKeystrokes: 200 SendTextAsHardwareKeys: True
    ELSE
        Text.CropText.CropTextBetweenFlags Text: tela_admissao FromFlag: $''' -------------------------------------------------------------------------------''' ToFlag: $'''Comando:''' IgnoreCase: False CroppedText=> tela_admissao IsFlagFound=> IsFlagFound
        Text.SplitText.Split Text: tela_admissao StandardDelimiter: Text.StandardDelimiter.NewLine DelimiterTimes: 1 Result=> linhas_admissao
        SET count_admissao TO 0
        LOOP FOREACH linha_adm IN linhas_admissao
            IF NotContains(linha_adm, $'''DESLIGADO''', True) THEN
                IF Contains(linha_adm, admissao_servidor, True) THEN
                    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''x{Return}''' DelayBetweenKeystrokes: 100 SendTextAsHardwareKeys: True
                END
                MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Tab}''' DelayBetweenKeystrokes: 100 SendTextAsHardwareKeys: True
            END
            Variables.IncreaseVariable Value: count_admissao IncrementValue: 1
        END
    END
    IF count_admissao = 0 THEN
        Excel.WriteToExcel.WriteCell Instance: excel_pericia Value: $'''admissão não localizada''' Column: $'''W''' Row: linha_loop
        GOTO 'fim dessa linha'
    END
    Clipboard.Clear _
    # A ação a seguir é para selecionar o médico. Pode ser qualquer um.
    MouseAndKeyboard.SendKeys.FocusAndSendKeysByTitleClass Title: terminal Class: $'''''' TextToSend: $'''X{Enter}''' DelayBetweenKeystrokes: 200 SendTextAsHardwareKeys: True
    # PESQUISAR FINALIDADE DE INSPEÇÃO MÉDICA: EFETIVO = 01 E NÃO-EFETIVO = 60; na primeira opção, basta enviar um X{Enter}; a segunda será abordada no subfluxo 'não-efetivo'
    MouseAndKeyboard.SendKeys.FocusAndSendKeysByTitleClass Title: terminal Class: $'''''' TextToSend: $'''X{Enter}''' DelayBetweenKeystrokes: 200 SendTextAsHardwareKeys: True
    # A ação 17 marca "N" em "Prorrogacao" e já pula automático pro campo seguinte
    MouseAndKeyboard.SendKeys.FocusAndSendKeysByTitleClass Title: terminal Class: $'''''' TextToSend: $'''N''' DelayBetweenKeystrokes: 200 SendTextAsHardwareKeys: True
    MouseAndKeyboard.SendKeys.FocusAndSendKeysByTitleClass Title: terminal Class: $'''''' TextToSend: $'''%data_inicio_afastamento%
%dias_solicitados%
{Tab}
%data_emissao_atestado%
%data_revisao_atestado%
{F5}''' DelayBetweenKeystrokes: 200 SendTextAsHardwareKeys: True
    WAIT 1
    MouseAndKeyboard.SendKeys.FocusAndSendKeysByTitleClass Title: terminal Class: $'''''' TextToSend: $'''{Control}({A}){Control}({C})''' DelayBetweenKeystrokes: 200 SendTextAsHardwareKeys: True
    Clipboard.GetText Text=> confirmacao_agendamento
    IF Contains(confirmacao_agendamento, $'''erro''', True) THEN
        DISABLE Excel.WriteToExcel.WriteCell Instance: excel_pericia Value: $'''CONSULTAR RPM DO PERICIANDO - POSSÍVEL JÁ TER SIDO PUBLICADO''' Column: $'''W''' Row: linha_loop
        CALL conferencia_admissao
        IF IsNotEmpty(linha_loop) THEN
            GOTO 'fim dessa linha'
        END
    END
    # aqui é possível de ter que confirmar quantos dias de fato o perito aprovou
    MouseAndKeyboard.SendKeys.FocusAndSendKeysByTitleClass Title: terminal Class: $'''''' TextToSend: $'''%vinculo_interessado%{Tab}
%dias_solicitados%
{Tab}{Tab}{Tab}{Tab}
%data_inicio_afastamento%
%cid_interessado%
{Tab}{Tab}{Tab}{Tab}
%CRM_atestado%''' DelayBetweenKeystrokes: 200 SendTextAsHardwareKeys: True
    # Ação 30: confirmar onde entra o CRM do médico perito
    WAIT 1
    MouseAndKeyboard.SendKeys.FocusAndSendKeysByTitleClass Title: terminal Class: $'''''' TextToSend: $'''{F5}X{Enter}''' DelayBetweenKeystrokes: 200 SendTextAsHardwareKeys: True
    # Ação 33: esta é a última ação antes de confirmar o lançamento da perícia no Sisap. Depois dessa ação, é necessário adicionar o 'enviar teclas' restante e ações que retornem para o início do loop, talvez um F5 (? menu ?).
    IF Contains($'''texto tela agendamento SISAP''', $'''CONVOCADO/DESLIG/CONTRATO ADM./REC. AMPLO LS - ATE 15 DIAS''', False) THEN
        Excel.WriteToExcel.WriteCell Instance: excel_pericia Value: $'''CONSULTAR RPM DO PERICIANDO - POSSÍVEL JÁ TER SIDO PUBLICADO''' Column: $'''S''' Row: linha_loop
    END
    IF Contains($'''texto tela final SISAP''', $'''REGISTRO INCLUIDO COM SUCESSO''', False) THEN
        Excel.WriteToExcel.WriteCell Instance: excel_pericia Value: $'''BIM digitado no SISAP para publicação''' Column: $'''W''' Row: linha_loop
    END
    LABEL 'fim dessa linha'
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{F3}''' DelayBetweenKeystrokes: 100 SendTextAsHardwareKeys: True
END
