
FUNCTION lista_processos GLOBAL
    **REGION início_lista_processos
    /# *Subfluxo para listar todos processos SEI de uma determinada unidade.*
Deve-se rodar anteriormente os fluxos: login_sei > troca_unidade
Ao final, a variável de fluxo "lista_final" conterá todos números de processos da unidade SEI selecionada.

*** CASO POSSUA O PLUGIN SEI PLUS ATIVO NO CHROME, DEVE DESATIVAR ANTES DE RODAR O ROBÔ.#/
    WebAutomation.ExecuteJavascript BrowserInstance: sei Javascript: $'''function ExecuteScript() {
	//variáveis de elementos da página SEI
	var pages = document.getElementById(\"selRecebidosPaginacaoSuperior\");
	var proxima_pagina = document.getElementById(\"lnkRecebidosProximaPaginaSuperior\");
	// Tratamento da paginação com base na presença ou não dos elementos \'pages\' e \'proxima_pagina\'
	
	if (pages === null && proxima_pagina ===null) {
		
		return 0;
			
	} else if (pages === null && proxima_pagina !==null){
		
		return 1;
	
	} else{
		
			return pages.length - 1;
		}
}''' Result=> pagination
    Text.ToNumber Text: pagination Number=> pagination_number
    # Loop para entrar em cada página da unidade_sei, salvar cada elemento da tabela processos recebidos em uma lista_final
    LOOP page FROM pagination_number TO 0 STEP -1
        WebAutomation.ExecuteJavascript BrowserInstance: sei Javascript: $'''function ExecuteScript() { infraAcaoPaginar(\'=\',%page%,\'Recebidos\', null) }'''
        WAIT 2
        WebAutomation.ExecuteJavascript BrowserInstance: sei Javascript: $'''function ExecuteScript() {
   
	const processos = [];
	var marcadores = \'\';
	//Seleciona linhas from table \"processos recebidos\"
	
	var listaProcessos = document.getElementById(\'tblProcessosRecebidos\');
	listaProcessos = listaProcessos.getElementsByClassName(\'infraTrClara\');
	
	//Loop para verificar cada linha da tabela
	for (let indexLinha = 0; indexLinha < listaProcessos.length; indexLinha++) {
		
		marcadores = listaProcessos[indexLinha].children[2].textContent;
		processos[indexLinha] = marcadores;
        }

    return processos.toString();
}
''' Result=> processos_vetor
        Text.SplitText.SplitWithDelimiter Text: processos_vetor CustomDelimiter: $''',''' IsRegEx: False Result=> lista
        Variables.MergeLists FirstList: lista_final SecondList: lista OutputList=> lista_final
        Variables.ClearList List: lista
    END
    # Guarda a lista em uma planilha Excel
    Excel.LaunchExcel.LaunchUnderExistingProcess Visible: False Instance=> ExcelInstance
    Excel.WriteToExcel.Write Instance: ExcelInstance Value: lista_final
    Excel.CloseExcel.CloseAndSaveAs Instance: ExcelInstance DocumentFormat: Excel.ExcelFormat.OpenXmlWorkbook DocumentPath: $'''C:\\Users\\santo\\Desktop\\processos_SEI.xlsx'''
    **ENDREGION
END FUNCTION
